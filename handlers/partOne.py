import asyncio

from vkbottle import CtxStorage
from vkbottle import Keyboard, KeyboardButtonColor, \
    Text
import bot
from config import labeler, photo_uploader
from data.keyboard import keyboard_first_part_one, keyboard_first_part_one_answer, keyboard_first_part_two, \
    keyboard_first_part_two_answer, keyboard_first_part_three, keyboard_first_part_three_answer
from data.partOneMessage import first_part_special_one, first_part_special_two, first_part_special_three, \
    first_part_special_four, first_part_special_five, first_part_special_six, first_part_special_seven, \
    first_part_special_eight, first_part_special_nine, first_part_special_ten, first_part_special_eleven, \
    first_part_special_twelve, first_part_special_thirteen, first_part_special_fourteen, first_part_special_fifteen, \
    first_part_special_sixteen,first_part_special_eight_addon, first_part_special_seventeen, first_part_special_eighteen, first_part_special_nineteen, \
    first_part_before_password, first_part_special_two_addon, first_part_special_three_new, first_part_special_pass_new, first_part_special_four_new, \
    first_part_special_six_new, first_part_special_seven_new, first_part_special_twelve_new, \
    first_part_special_pass_new_answer, first_part_special_pass_two_answer
from database.db import Database
from states.mystates import WelcomeStates, PartOneStates, PartTwoStates

ctx_storage = CtxStorage()
db = Database('database.db')


@labeler.message(text=["–Ø –ø–æ–¥–æ—à–µ–ª –∫ —Å—Ç–æ–ª—É üòä"], state=PartOneStates.START_STATE)
async def part_one_one_handler(message):
    await message.answer("–ù–∞ –≤–∞—à–µ–º —Å—Ç–æ–ª–µ –µ—Å—Ç—å —á–µ–º–æ–¥–∞–Ω—á–∏–∫ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –ù–æ –ø–æ–∫–∞ –æ–Ω –∑–∞–∫—Ä—ã—Ç ü§î"
                         "\t\t–î–∞–≤–∞–π –∂–µ –æ—Ç–∫—Ä–æ–µ–º –µ–≥–æ!")
    await message.answer("–°–∫–æ—Ä–µ–µ —á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é. –Ø –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –≤–∞—Å –∫–æ–µ-—á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ ü§©")
    await bot.state_dispenser.set(message.peer_id, PartOneStates.PASSWORD_GAME_STATES)
    return "–í –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Ç—ã –Ω–∞–π–¥–µ—à—å –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ. –ù–∞–ø–∏—à–∏ –µ–≥–æ"


@labeler.message(state=PartOneStates.PASSWORD_GAME_STATES)
async def part_one_two_handler(message):
    if message.text == "–ù–µ—Ñ—Ç—å" or message.text == "–Ω–µ—Ñ—Ç—å":
        await message.answer("–í–µ—Ä–Ω–æ! üòé"
                             "\n\n–Ø —Å–æ–±—Ä–∞–ª –¥–ª—è –≤–∞—Å –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!"
                             "\n\n–ò—Å–ø–æ–ª—å–∑—É–π –≤—Å–µ, —á—Ç–æ –µ—Å—Ç—å –≤ –Ω–∞–±–æ—Ä–µ, –∏ –∏–∑—É—á–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")

        id_team = ctx_storage.get(f"{message.peer_id}_team")
        await message.answer("""–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —è –ø–æ–ª–æ–∂–∏–ª –≤ –Ω–∞–±–æ—Ä

–ù–∞–±–æ—Ä —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:

- –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –º–∞–∫–µ—Ç–∞  ‚¨ú
- –∞–∫—Ä–∏–ª–æ–≤—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –Ω–∞–∫–ª–µ–π–∫–∏
- –Ω–æ–∂–Ω–∏—Ü—ã ‚úÇÔ∏è
- —Ä—É—á–∫–∏ üñäÔ∏è
- –∂—É—Ä–Ω–∞–ª—ã –æ—Ç–∫—Ä—ã—Ç–∏–π""")

        await message.answer("–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∏–∑—É—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏!"
                             "\n\n–ö–∞–∂–¥–æ–º—É –∏–∑ –≤–∞—Å —è –æ—Å—Ç–∞–≤–∏–ª ¬´–ñ—É—Ä–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç–∏–π¬ª, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –∏–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è –∏–∑ –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏"
                             "\n\n–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –∂—É—Ä–Ω–∞–ª –∏ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–µ–π –æ—Ç—Ä–∞—Å–ª–∏"
                             "\n\n–ò–∑—É—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, –æ–Ω–∞ —Å–∫–æ—Ä–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è —Ç–µ–±–µ üòä")
        keyboard = (
            Keyboard(inline=True)
            .add(Text("–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∂—É—Ä–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç–∏–π"), color=KeyboardButtonColor.POSITIVE)
        ).get_json()
        await bot.state_dispenser.set(message.peer_id, PartOneStates.END_PASSWORD_GAME_STATES)

        answer_key = await message.answer("–£ —Ç–µ–±—è –µ—Å—Ç—å 5 –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç—å –≤–µ—Å—å –∂—É—Ä–Ω–∞–ª\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–æ–≥–¥–∞ –ø—Ä–æ—á–∏—Ç–∞–µ—à—å –µ–≥–æ", keyboard=keyboard)
        return answer_key
    else:
        await message.answer("–û–π, –æ—à–∏–±–∫–∞. ü§î –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üòä")

@labeler.message(text=['–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∂—É—Ä–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç–∏–π'], state=PartOneStates.END_PASSWORD_GAME_STATES)
async def read_handler(message):
    await message.answer("–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º, –≥–æ—Ç–æ–≤ –ª–∏ —Ç—ã –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–≤–æ–µ–≥–æ –∑–∞–≤–æ–¥–∞? ü§î")
    keyboard = (
        Keyboard(inline=True)
        .add(Text("–ü—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–º"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–ü—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–º"), color=KeyboardButtonColor.POSITIVE)
    ).get_json()
    await message.answer("–ü—Ä–∏ –∫–∞–∫–æ–º –º–µ—Ç–æ–¥–µ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ñ—Ç–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –Ω–µ—Ñ—Ç–∏?", keyboard=keyboard)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.ANSWER_ONE_STATES)


@labeler.message(text=["–ü—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–º", "–ü—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–º"], state=PartOneStates.ANSWER_ONE_STATES)
async def part_one_three_handler(message):
    if message.text == "–ü—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–º":
        await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –Ω–µ—Ñ—Ç–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–∞—Ö –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏")
    elif message.text == "–ü—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–º":
        await message.answer(
            "–î–∞–∞ ü§©, –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ –Ω–µ—Ñ—Ç–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –≤—Ç–æ—Ä–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–∞—Ö –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏")
    db.set_answer_one(message.peer_id, message.text)

    await bot.state_dispenser.set(message.peer_id, PartOneStates.ANSWER_TWO_STATES)
    return "–†–∞—Å–ø–æ–ª–æ–∂–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –Ω–µ—Ñ—Ç–∏" \
           "\n1) —ç–ª–µ–∫—Ç—Ä–æ–æ–±–µ—Å—Å–æ–ª–∏–≤–∞—é—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ - –≠–õ–û–£" \
           "\n2) —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–π –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ñ—Ç–∏" \
           "\n3) —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ-–≤–∞–∫—É—É–º–Ω–æ–π –ø–µ—Ä–µ–≥–æ–Ω–∫–∏  - –ê–í–¢" \
           "\n4) –Ω–µ—Ñ—Ç—è–Ω–∞—è —Å–∫–≤–∞–∂–∏–Ω–∞" \
           "\n5) —Ç–æ–≤–∞—Ä–Ω—ã–π –ø–∞—Ä–∫"


@labeler.message(state=PartOneStates.ANSWER_TWO_STATES)
async def part_one_four_handler(message):
    if message.text == "41325":
        await message.answer("–î–∞–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ üëç")
    else:
        await message.answer(
            "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –Ω–µ—Ñ—Ç–∏: –Ω–µ—Ñ—Ç—è–Ω–∞—è —Å–∫–≤–∞–∂–∏–Ω–∞, –≠–õ–û–£, –ê–í–¢, —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–π –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ñ—Ç–∏, —Ç–æ–≤–∞—Ä–Ω—ã–π –ø–∞—Ä–∫")
    db.set_answer_two(message.peer_id, message.text)

    await bot.state_dispenser.set(message.peer_id, PartOneStates.ANSWER_THREE_STATES)

    keyboard = (
        Keyboard(inline=True)
        .add(Text("–º–µ—Ç–∞–Ω"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–∫–µ—Ä–æ—Å–∏–Ω"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–≥—É–¥—Ä–æ–Ω"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–±–µ–Ω–∑–∏–Ω"), color=KeyboardButtonColor.POSITIVE)
    ).get_json()
    mess_key = await message.answer(
        "–ö–∞–∫–∞—è —Ñ—Ä–∞–∫—Ü–∏—è –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞–∫—É—É–º–Ω–æ–º –±–ª–æ–∫–µ?",
        keyboard=keyboard)
    return mess_key


@labeler.message(text=["–º–µ—Ç–∞–Ω", "–∫–µ—Ä–æ—Å–∏–Ω", "–≥—É–¥—Ä–æ–Ω", "–±–µ–Ω–∑–∏–Ω"], state=PartOneStates.ANSWER_THREE_STATES)
async def part_one_five_handler(message):
    if message.text == "–≥—É–¥—Ä–æ–Ω":
        await message.answer("–î–∞–∞! ü§© –ù–∞ –≤–∞–∫—É—É–º–Ω–æ–º –±–ª–æ–∫–µ –ø–æ–ª—É—á–∞—é—Ç –≥—É–¥—Ä–æ–Ω ")
    else:
        await message.answer("–ù–∞ –≤–∞–∫—É—É–º–Ω–æ–º –±–ª–æ–∫–µ –ø–æ–ª—É—á–∞—é—Ç –≥—É–¥—Ä–æ–Ω")
    db.set_answer_six(message.peer_id, message.text)
    #await asyncio.sleep(2)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.ANSWER_FOUR_STATES)
    keyboard = (
        Keyboard(inline=True)
        .add(Text("–¥–ª—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ñ—Ç–∏"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∫–µ—Ä–æ—Å–∏–Ω–∞"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤"), color=KeyboardButtonColor.POSITIVE)
    ).get_json()
    mess_key = await message.answer(
        "–ó–∞—á–µ–º –Ω–∞ –ù–ü–ó –Ω—É–∂–µ–Ω —Ç–æ–≤–∞—Ä–Ω—ã–π –ø–∞—Ä–∫?",
        keyboard=keyboard)
    return mess_key


@labeler.message(text=["–¥–ª—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ñ—Ç–∏",
                       "–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤",
                       "–¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∫–µ—Ä–æ—Å–∏–Ω–∞",
                       "–¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤"], state=PartOneStates.ANSWER_FOUR_STATES)
async def part_one_six_handler(message):
    if message.text == "–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤":
        await message.answer("–í–µ—Ä–Ω–æ! üí´ –ù–∞ –ù–ü–ó –≤ —Ç–æ–≤–∞—Ä–Ω–æ–º –ø–∞—Ä–∫–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç—ã")
    else:
        await message.answer("–ù–∞ –ù–ü–ó –≤ —Ç–æ–≤–∞—Ä–Ω–æ–º –ø–∞—Ä–∫–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç—ã")
    db.set_answer_seven(message.peer_id, message.text)
    await asyncio.sleep(2)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.ANSWER_FIVE_STATES)
    keyboard = (
        Keyboard(inline=True)
        .add(Text("–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–ª–∏–≤–∞ –æ—Ç —Å–µ—Ä–Ω–∏—Å—Ç—ã—Ö —Å–æ–µ–¥."), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≥–∞–∑–æ–≤ –æ—Ç –ø—Ä–∏–º–µ—Å–µ–π"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –≤–æ–¥—ã"), color=KeyboardButtonColor.POSITIVE)
        .row()
        .add(Text("–¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≥–∞–∑–æ–≤ –Ω–∞ —Ñ—Ä–∞–∫—Ü–∏–∏"), color=KeyboardButtonColor.POSITIVE)
    ).get_json()
    mess_key = await message.answer(
        "–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–∏–¥—Ä–æ–æ—á–∏—Å—Ç–∫–∏?",
        keyboard=keyboard)
    return mess_key


@labeler.message(text=["–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–ª–∏–≤–∞ –æ—Ç —Å–µ—Ä–Ω–∏—Å—Ç—ã—Ö —Å–æ–µ–¥.",
                       "–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≥–∞–∑–æ–≤ –æ—Ç –ø—Ä–∏–º–µ—Å–µ–π",
                       "–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –≤–æ–¥—ã",
                       "–¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≥–∞–∑–æ–≤ –Ω–∞ —Ñ—Ä–∞–∫—Ü–∏–∏"], state=PartOneStates.ANSWER_FIVE_STATES)
async def part_one_seven_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    if message.text == "–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–ø–ª–∏–≤–∞ –æ—Ç —Å–µ—Ä–Ω–∏—Å—Ç—ã—Ö —Å–æ–µ–¥.":
        await message.answer(
            "–¢–æ—á–Ω–æ! üëè –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–∏–¥—Ä–æ–æ—á–∏—Å—Ç–∫–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ üßπ —Ç–æ–ø–ª–∏–≤–∞ –æ—Ç —Å–µ—Ä–Ω–∏—Å—Ç—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
    else:
        await message.answer("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–∏–¥—Ä–æ–æ—á–∏—Å—Ç–∫–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ üßπ —Ç–æ–ø–ª–∏–≤–∞ –æ—Ç —Å–µ—Ä–Ω–∏—Å—Ç—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
    db.set_answer_eight(message.peer_id, message.text)
    await asyncio.sleep(2)
    await message.answer("–ù—É —á—Ç–æ –∂, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–∞–º–æ–π —Å–±–æ—Ä–∫–µ! ‚ú®")

    # –°–∞–º—ã–µ –ø–µ—Ä–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await asyncio.sleep(5)
    await message.answer(first_part_special_one[id_team])

    await asyncio.sleep(3)
    photo = await photo_uploader.upload(
        file_source=f"img/part_one_1_{id_team}.png",
        peer_id=message.peer_id,
    )
    await message.answer(first_part_special_two[id_team], attachment=photo)
    await asyncio.sleep(3)

    if id_team == 9:
        photo_9_1 = await photo_uploader.upload(
            file_source=f"img/part_one_1_9_2.png",
            peer_id=message.peer_id,
        )
        await message.answer(attachment=photo_9_1)
        await asyncio.sleep(3)
    if id_team == 1 or id_team == 2 or id_team == 7 or id_team == 9:
        photo_1 = await photo_uploader.upload(
            file_source=f"img/part_one_1_{id_team}_1.png",
            peer_id=message.peer_id,
        )
        await message.answer(first_part_special_two_addon[id_team], attachment=photo_1)
        await asyncio.sleep(3)
    elif id_team == 6:
        await message.answer(first_part_special_two_addon[id_team])
        await asyncio.sleep(3)

    await message.answer(first_part_special_three_new[id_team])
    await asyncio.sleep(10)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.PASS_ONE)
    keyboard = await message.answer(
        "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–≥—Ä—ã —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –Ω–∞—à–µ–ª –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —á–∞—Å—Ç–∏ –∏–∑ –∞–∫—Ä–∏–ª–∞. –ù–∞—à–µ–ª?",
        keyboard=(
            Keyboard(inline=True)
            .add(Text("–î–∞"), color=KeyboardButtonColor.POSITIVE)
        ).get_json()
    )
    return keyboard


# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è---------------------------------------------------


@labeler.message(text=["–î–∞", "–¥–∞"], state=PartOneStates.PASS_ONE)
async def part_one_pass_one_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    await bot.state_dispenser.set(message.peer_id, PartOneStates.KEYBOARD_ONE)

    # if message.text == "1859":
    #     # –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ªif message.text == "1859":
        # –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å—å
    # await message.answer(first_part_special_pass_new_answer[id_team])
    # await asyncio.sleep(2)

    await message.answer(first_part_special_four_new[id_team])
    await asyncio.sleep(5)

    await message.answer(first_part_special_five[id_team])
    await asyncio.sleep(10)
    # await message.answer(first_part_special_six_new[id_team])
    await message.answer("–ê –µ—â–µ –∑–¥–µ—Å—å –µ—Å—Ç—å —Ä–∞–∑–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–∂–µ –Ω–∞–¥–æ –±—É–¥–µ—Ç –ø—Ä–∏–∫–ª–µ–∏—Ç—å. –ù–æ –æ –Ω–∏—Ö —Ä–∞—Å—Å–∫–∞–∂—É —á—É—Ç—å –ø–æ–∑–∂–µ ü§´")
    await asyncio.sleep(5)
    await message.answer("–°–µ–π—á–∞—Å —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ —Ç–µ–æ—Ä–∏—é")

    if id_team == 4 or id_team == 6 or id_team == 7 or id_team == 8:
        photo1 = await photo_uploader.upload(
            file_source=f"img/part_one_3_{id_team}.png",
            peer_id=message.peer_id,
        )
        await message.answer(first_part_special_eight[id_team], attachment=photo1)
        await asyncio.sleep(5)
    else:
        await message.answer(first_part_special_eight[id_team])
        await asyncio.sleep(5)

    if id_team == 5 or id_team == 8:
        photo2 = await photo_uploader.upload(
            file_source=f"img/part_one_4_{id_team}.png",
            peer_id=message.peer_id,
        )
        await message.answer(first_part_special_nine[id_team], attachment=photo2)
        await asyncio.sleep(5)
    else:
        await message.answer(first_part_special_nine[id_team])
        await asyncio.sleep(5)

    await message.answer(first_part_special_ten[id_team])

    await asyncio.sleep(5)
    await message.answer(first_part_special_pass_two_answer[id_team])

    await asyncio.sleep(5)
    if id_team == 5 or id_team == 7:
        photo2 = await photo_uploader.upload(
            file_source=f"img/part_one_4_{id_team}_1.png",
            peer_id=message.peer_id,
        )
        await message.answer(first_part_special_twelve_new[id_team], attachment=photo2)
    else:
        await message.answer(first_part_special_twelve_new[id_team])
    await asyncio.sleep(5)
    if id_team == 3 or id_team == 5 or id_team == 8:
        photo3 = await photo_uploader.upload(
            file_source=f"img/part_one_5_{id_team}.png",
            peer_id=message.peer_id,
        )
        await message.answer(first_part_special_thirteen[id_team], attachment=photo3)
    else:
        await message.answer(first_part_special_thirteen[id_team])

    await asyncio.sleep(5)
    await message.answer("–°–µ–π—á–∞—Å —Ç–µ–±–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –∫–æ–Ω—Å–ø–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–ª–∞ —Ç–≤–æ—è –∫–æ–º–∞–Ω–¥–∞")

    keyboard = await message.answer(first_part_special_fourteen[id_team], keyboard=keyboard_first_part_one[id_team])
    return keyboard


@labeler.message(state=PartOneStates.PASS_TWO)
async def part_one_pass_two_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    if message.text == "–ò–Ω–∂–µ–Ω–µ—Ä" or message.text == "–∏–Ω–∂–µ–Ω–µ—Ä":

        await message.answer(first_part_special_pass_two_answer[id_team])
        await asyncio.sleep(5)

        # await message.answer(first_part_special_eleven[id_team])

        await asyncio.sleep(5)
        # await asyncio.sleep(3)
        if id_team == 4 or id_team == 6:
            photo2 = await photo_uploader.upload(
                file_source=f"img/part_one_4_{id_team}_1.png",
                peer_id=message.peer_id,
            )
            await message.answer(first_part_special_twelve_new[id_team], attachment=photo2)
        else:
            await message.answer(first_part_special_twelve_new[id_team])

        await asyncio.sleep(5)
        # await asyncio.sleep(3)
        if id_team == 0 or id_team == 2 or id_team == 3 or id_team == 4 or id_team == 6 or id_team == 9:
            photo3 = await photo_uploader.upload(
                file_source=f"img/part_one_5_{id_team}.png",
                peer_id=message.peer_id,
            )
            await message.answer(first_part_special_thirteen[id_team], attachment=photo3)
        else:
            await message.answer(first_part_special_thirteen[id_team])

        await asyncio.sleep(5)
        # await asyncio.sleep(3)
        await bot.state_dispenser.set(message.peer_id, PartOneStates.KEYBOARD_ONE)

    else:
        await message.answer("–û–π, –æ—à–∏–±–∫–∞. ü§î –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üòä")


@labeler.message(state=PartOneStates.KEYBOARD_ONE)
async def part_one_pass_three_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    db.set_answer_three(message.peer_id, message.text)

    if message.text == keyboard_first_part_one_answer[id_team]:
        await message.answer("–î–∞–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ üòä")
    else:
        await message.answer(first_part_special_fifteen[id_team])

    await asyncio.sleep(2)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.KEYBOARD_TWO)
    keyboard = await message.answer(first_part_special_sixteen[id_team], keyboard=keyboard_first_part_two[id_team])
    return keyboard


@labeler.message(state=PartOneStates.KEYBOARD_TWO)
async def part_one_pass_four_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    db.set_answer_four(message.peer_id, message.text)
    if message.text == keyboard_first_part_two_answer[id_team]:
        await message.answer("–î–∞–∞, –≤–µ—Ä–Ω–æ!")
    else:
        await message.answer(first_part_special_seventeen[id_team])

    await asyncio.sleep(2)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.KEYBOARD_THREE)
    keyboard = await message.answer(first_part_special_eighteen[id_team], keyboard=keyboard_first_part_three[id_team])
    return keyboard


@labeler.message(state=PartOneStates.KEYBOARD_THREE)
async def part_one_pass_five_handler(message):
    id_team = ctx_storage.get(f"{message.peer_id}_team")
    db.set_answer_five(message.peer_id, message.text)
    if message.text == keyboard_first_part_three_answer[id_team]:
        await message.answer("–î–∞–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ! üòé")
    else:
        await message.answer(first_part_special_nineteen[id_team])

    await asyncio.sleep(2)

    await message.answer("–ù—É —á—Ç–æ —Ä–µ–±—è—Ç–∞, –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ ")
    await asyncio.sleep(3)
    await message.answer("–í—ã –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –∑–∞–≤–æ–¥ - —ç—Ç–æ –µ–¥–∏–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º\n\n"
                         "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –æ–±—â—É—é —Å—Ö–µ–º—É –Ω–∞—à–µ–≥–æ –∑–∞–≤–æ–¥–∞, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–∞—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤")
    await asyncio.sleep(5)
    await message.answer("""–û—Ç–ø—Ä–∞–≤–ª—è—é –º–∏–Ω–∏-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã:

1Ô∏è‚É£–ü–æ–¥–æ–π–¥–∏—Ç–µ –∫ –±–æ–ª—å—à–æ–º—É —Å—Ç–æ–ª—É –∏ –Ω–∞–π–¥–∏—Ç–µ —É—á–∞—Å—Ç–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≤–∞—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ 

2Ô∏è‚É£–ü–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ –≤–∞—à–∏ –∞–∫—Ä–∏–ª–æ–≤—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–æ–∫

3Ô∏è‚É£–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ 

4Ô∏è‚É£–ì–æ—Ç–æ–≤–æ! –í—ã —É—Å–ø–µ—à–Ω–æ —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å ü§©


""")
    await asyncio.sleep(5)
    await bot.state_dispenser.set(message.peer_id, PartOneStates.NEW_PASSWORD_STATES)
    return "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø –≤–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å, –µ–≥–æ —Å–æ–æ–±—â–∏—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä"


@labeler.message(state=PartOneStates.NEW_PASSWORD_STATES)
async def part_one_pass_six_handler(message):
    if message.text == "1955":
        await message.answer(
            "–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π! üòé"
            "\n\n–ù—É —á—Ç–æ, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –Ø —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –ø—Ä–∏–ª–µ—á—É –∫ –≤–∞–º –∏ –ø–æ—Å–º–æ—Ç—Ä—é, –∫–∞–∫–æ–π —É –≤–∞—Å –ø–æ–ª—É—á–∏–ª—Å—è –∑–∞–≤–æ–¥")
        await asyncio.sleep(3)
        # general_scheme
        # photo = await photo_uploader.upload(
        #     file_source=f"img/general_scheme.png",
        #     peer_id=message.peer_id,
        # )
        await message.answer("""–†–µ–±—è—Ç–∞, –Ω–∞–º —Å–µ–π—á–∞—Å —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏. –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞—à –∑–∞–≤–æ–¥ –±—É–¥–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –æ—Ç–∫—Ä—ã—Ç 

–í–æ—Ç –ø–æ –∫–∞–∫–∏–º –ø—Ä–∞–≤–∏–ª–∞–º –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∏—Ç—å—Å—è –≤–∞—à —Ä–∞—Å—Å–∫–∞–∑ 
—É—Å–ª–æ–≤–∏—è:
1. –£ –≤–∞—Å –±—É–¥–µ—Ç–µ 2 –º–∏–Ω—É—Ç—ã –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–∞
2.  –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ ""–í–æ—Ç –º–æ—è –∫–æ–º–∞–Ω–¥–∞..."" ;–æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å,–ø–æ–º–æ–≥–∞—Ç—å –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
3. –ù—É–∂–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –≥—Ä–æ–º–∫–æ –∏ —á—ë—Ç–∫–æ ,—á—Ç–æ–±—ã —Ç–µ–±—è —É—Å–ª—ã—à–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã —ç—Ç–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
4. –í–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å–∫–∞–∑–∞ –Ω–µ–ª—å–∑—è –Ω–∏–∫—É–¥–∞ –ø–æ–¥–≥–ª—è–¥—ã–≤–∞—Ç—å. –ó–∞–ø—Ä–µ—â–µ–Ω–æ —á–∏—Ç–∞—Ç—å 



–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è""")
        await asyncio.sleep(5)
        # id_team = ctx_storage.get(f"{message.peer_id}_team")
        # await message.answer(first_part_before_password[id_team])
        # # await asyncio.sleep(300)
        # await asyncio.sleep(120)
        await message.answer("""–ß—Ç–æ –∂–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–∞—à —Ä–∞—Å—Å–∫–∞–∑?

1. –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —á–ª–µ–Ω–æ–≤ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã

2. –ù–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤,–∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏

3. –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, –¥–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç """)
        await asyncio.sleep(10)

        await message.answer("""–û–≥–æ,–≤–æ—Ç –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞ ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è

–ì–¥–µ –∂–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã?

1. –ü–æ–∏—Å–∫–∞—Ç—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –æ—Ç –º–µ–Ω—è

2. –°–ø—Ä–æ—Å–∏—Ç—å —É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∂–∏–ª–µ—Ç–∫–µ""")
        await asyncio.sleep(5)
        await message.answer("–ù—É —á—Ç–æ –∂–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ä–∞—Å—Å–∫–∞–∑–∞ –ø–æ—à–ª–æ,–Ω–∞—á–∏–Ω–∞–π—Ç–µ –±—ã—Å—Ç—Ä–µ–µ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è. –£ —Ç–µ–±—è –∏ —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã –µ—Å—Ç—å –Ω–∞ —ç—Ç–æ –≤—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç!!!")
        await asyncio.sleep(210)

        await message.answer("-–¢–∏–∫-—Ç–∞–∫...")
        await asyncio.sleep(30)
        await message.answer("-–¢–∏–∫-—Ç–∞–∫...")
        await asyncio.sleep(30)
        await message.answer("-–¢–∏–∫-—Ç–∞–∞–∞–∞–∫–∫‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è")
        await asyncio.sleep(30)
        await message.answer("–ö–æ–≥–¥–∞ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—Å—Ç—É–ø—è—Ç ,—Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —É–∑–Ω–∞–µ—à—å –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞")

        await bot.state_dispenser.set(message.peer_id, PartTwoStates.PASSWORD_START_TWO_STATES)
        return "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
    else:
        await message.answer("–û–π, –æ—à–∏–±–∫–∞. ü§î –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üòä")
